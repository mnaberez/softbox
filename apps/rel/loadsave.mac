;LOADSAVE.REL

        .Z80                    ;set mode for M80
        NAME    ('LOADSA')
        GLOBAL  EXSYS           ;Execute a new CP/M system
        GLOBAL  SAVESY          ;Write CP/M image to an IEEE-488 drive
        GLOBAL  RDSYS           ;Read CP/M image from an IEEE-488 drive
        GLOBAL  BUFFIN          ;Buffered Console Input
        GLOBAL  IDISK           ;Initialize an IEEE-488 disk drive
        GLOBAL  DSKERR          ;Check CBM DOS error and print message(?)
        GLOBAL  FORMAT          ;Format an IEEE-488 drive for SoftBox use
        GLOBAL  CREAD           ;Read CP/M image from a Corvus drive
        GLOBAL  CWRITE          ;Write CP/M image to a Corvus drive
        GLOBAL  CFORM           ;Format a Corvus drive for Softbox use
        GLOBAL  DTYPE
        GLOBAL  CREAD2
        GLOBAL  CREAD1
        GLOBAL  CWRIT3
        GLOBAL  CWRIT2
        GLOBAL  CWRIT1

BUFFIN:
;Buffered Console Input.  Caller must store buffer size at 80h.  On
;return, 81h will contain the number of data bytes and the data
;will start at 82h.
;
        LD      C,0AH           ;C = Buffered Console Input
        LD      DE,080H         ;DE = Default DMA buffer area (128 bytes)
        JP      05H             ;BDOS System Call

EXSYS:
;Execute a new CP/M system.  The buffer at 4000h contains a new
;CP/M system image (7168 bytes = CCP + BDOS + BIOS config + BIOS storage).
;Copy the new system into place and then jump to the BIOS to start it.
;
        LD      BC,01C00H       ;BC = 7168 bytes to copy
        LD      HL,04000H       ;HL = address of new CP/M system image
        LD      DE,0D400H       ;DE = base address of CP/M system image
        LDIR                    ;Copy BC bytes from (HL) to (DE)
        JP      0F075H          ;Perform system init and then run CP/M

RDSYS:
;Read the "CP/M" and "K" files from an IEEE-488 drive into memory.
;
;4000-5BFF  "CP/M"  CCP + BDOS + BIOS Config + BIOS Working Storage
;6000-67FF  "K"     Terminal program that runs on the CBM computer
;
        LD      A,(HL)
        LD      (@L0),A
        CALL    0F054H          ;D = BIOS Get device address for a CP/M drive number
        LD      E,00H           ;E = Secondary address 0
        PUSH    DE              ;Push IEEE-488 primary & secondary addrs

                                ;Open "CP/M" file (CP/M image):
        CALL    @L1             ;  Open "CP/M" file
        LD      A,(@L0)         ;  Get current CP/M drive number from @L0
        CALL    0F05AH          ;  BIOS Read the error channel of an IEEE-488 device
        LD      (@L2),A         ;  Store CBM DOS error code in @L2

                                ;Read "CP/M" file into buffer at 4000h:
        LD      HL,04000H       ;  HL = base address of buffer for CP/M image
        LD      BC,01C00H       ;  BC = 7168 bytes in CP/M image

;BUFFIN+039H: (???)
        POP     DE              ;  Pop IEEE-488 primary & secondary addrs
        OR      A               ;  Set flags to check CBM DOS error (0=OK)
        RET     NZ              ;  Return if not OK

        PUSH    DE              ;  Push IEEE-488 primary & secondary addrs
        CALL    0F039H          ;  BIOS Send TALK to an IEEE-488 device
        CALL    0F03FH          ;  BIOS Read byte from an IEEE-488 device
        LD      (HL),A          ;  Save byte read into buffer
        INC     HL              ;  Increment buffer pointer
        DEC     BC              ;  Decrement bytes remaining to read
        LD      A,B             ;  A = B
        OR      C               ;  OR with C to check if BC=0
        JR      NZ,BUFFIN+039H  ;  Loop until all bytes are read

                                ;Close "CP/M" file:
        CALL    0F03CH          ;  BIOS Send UNTALK to all IEEE-488 devices
        POP     DE              ;  Pop IEEE-488 primary & secondary addrs
        PUSH    DE              ;  Push IEEE-488 primary & secondary addrs
        CALL    0F060H          ;  BIOS Close an open file on an IEEE-488 device
        POP     DE              ;  Pop IEEE-488 primary & secondary addrs

                                ;Open the "K" file (CBM terminal):
        PUSH    DE              ;  Push IEEE-488 primary & secondary addrs
        CALL    @L3             ;  Open "K" file
        LD      A,(@L0)         ;  Get current CP/M drive number from @L0
        CALL    0F05AH          ;  BIOS Read the error channel of an IEEE-488 device
        LD      (@L2),A         ;  Store CBM DOS error code in @L2

                                ;Read the "K" file into buffer at 6000h:
        LD      HL,06000H       ;  HL = base address of buffer for term
        LD      BC,0800H        ;  BC = 2048 bytes in terminal program

;BUFFIN+066h: (???)
        POP     DE              ;  Pop IEEE-488 primary & secondary addrs
        OR      A               ;  Set flags to check CBM DOS error (0=OK)
        RET     NZ              ;  Return if not OK

        PUSH    DE              ;  Push IEEE-488 primary & secondary addrs
        CALL    0F039H          ;  BIOS Send TALK to an IEEE-488 device
        CALL    0F03FH          ;  BIOS Read byte from an IEEE-488 device
        LD      (HL),A          ;  Save byte read into buffer
        INC     HL              ;  Increment buffer pointer
        DEC     BC              ;  Decrement bytes remaining to read
        LD      A,B             ;  A = B
        OR      C               ;  OR with C to check if BC=0
        JR      NZ,BUFFIN+066H  ;  Loop until all bytes are read

                                ;Close "K" file:
        CALL    0F03CH          ;  BIOS Send UNTALK to all IEEE-488 devices
        POP     DE              ;  Pop IEEE-488 primary & secondary addrs
        CALL    0F060H          ;  BIOS Close an open file on an IEEE-488 device
        LD      A,(@L0)         ;  Get current CP/M drive number from @L0
        CALL    0F05AH          ;  BIOS Read the error channel of an IEEE-488 device
        LD      (@L2),A         ;  Store CBM DOS error code in @L2
        RET

CREAD:
;Read CP/M image from a Corvus drive.
;
        LD      C,(HL)
        CALL    0F01BH          ;BIOS Select disk drive
        LD      DE,04000H
        LD      BC,00H
CREAD2:
        CALL    0F01EH          ;BIOS Set track number
        PUSH    BC
        LD      BC,00H
CREAD1:
        CALL    0F021H          ;BIOS Set sector number
        PUSH    BC
        PUSH    DE
        CALL    0F027H          ;BIOS Read selected sector
        OR      A
        JR      NZ,CWRIT3
        POP     DE
        LD      BC,080H
        LD      HL,080H
        LDIR                    ;Copy BC bytes from (HL) to (DE)
        POP     BC
        INC     C
        LD      A,C
        CP      040H
        JR      NZ,CREAD1
        POP     BC
        INC     C
        LD      A,C
        CP      02H
        JR      NZ,CREAD2
        RET

CWRITE:
;Write CP/M image to a Corvus drive.
;
        LD      C,(HL)
        CALL    0F01BH          ;BIOS Select disk drive
        LD      HL,04000H
        LD      BC,00H
CWRIT2:
        CALL    0F01EH          ;BIOS Set track number
        PUSH    BC
        LD      BC,00H
CWRIT1:
        CALL    0F021H          ;BIOS Set sector number
        PUSH    BC
        LD      BC,080H
        LD      DE,080H
        LDIR                    ;Copy BC bytes from (HL) to (DE)
        PUSH    HL
        CALL    0F02AH          ;BIOS Write selected sector
        OR      A
        JR      NZ,CWRIT3
        POP     HL
        POP     BC
        INC     C
        LD      A,C
        CP      040H
        JR      NZ,CWRIT1
        POP     BC
        INC     C
        LD      A,C
        CP      02H
        JR      NZ,CWRIT2
        RET

CWRIT3:
        POP     HL              ;a      0E1H
        POP     HL              ;a      0E1H
        POP     HL              ;a      0E1H
        JP      @L4

DTYPE:
        LD      A,(HL)          ;~      07EH
        CALL    0F051H          ;BIOS Get drive type for a CP/M drive number
        LD      (HL),C          ;q      071H
        INC     HL              ;#      023H
        LD      (HL),00H
        RET                     ;I      0C9H

IDISK:
;Initialize an IEEE-488 disk drive.
;
;HL = pointer to a CP/M drive number
;
        LD      A,(HL)          ;A = CP/M drive number
        JP      0F078H          ;Initialize an IEEE-488 disk drive

DSKERR:
;Check CBM DOS error and print message(?)
;
        LD      A,(@L2)
        LD      (HL),A
        INC     HL

        XOR     A               ;A = 0
        LD      (HL),A

        LD      A,(@L2)
        OR      A               ;Set flags
        RET     Z               ;Return if no error (0=OK)

        LD      DE,@L5          ;DE = address of "Disk Error" string
        LD      C,09H           ;C = Output String
        CALL    05H             ;BDOS System Call

        LD      HL,0EAC0H       ;HL = address of last CBM DOS error message
;BUFFIN+0113H (???)
        LD      E,(HL)          ;E = read char from error message
        PUSH    HL              ;Save HL
        LD      C,02H           ;C = Console Output
        CALL    05H             ;BDOS System Call
        POP     HL              ;Recall HL

        INC     HL              ;Move to next char in error message
        LD      A,(HL)          ;A = read char from error message
        CP      0DH             ;Is it a carriage return?
        JR      NZ,BUFFIN+0113H ;  No: Loop to continue printing the msg

        LD      DE,@L6          ;DE = address of CR+LF+"$"
        LD      C,09H           ;C = Output String
        CALL    05H             ;BDOS System Call
        RET

@L5:
;CR,LF,"Disk Error: ",CR,LF,"$"
        DEC     C               ;CR     0DH
        LD      A,(BC)          ;LF     0AH
        LD      B,H             ;D      044H
        LD      L,C             ;i      069H
        LD      (HL),E          ;s      073H
        LD      L,E             ;k      06BH
        JR      NZ,BUFFIN+0197H
        LD      (HL),D          ;r      072H
        LD      (HL),D          ;r      072H
        LD      L,A             ;o      06FH
        LD      (HL),D          ;r      072H
        JR      NZ,BUFFIN+0172H
        JR      NZ,BUFFIN+015EH
@L6:
;CR,LF,"$"
        DEC     C               ;CR     0DH
        LD      A,(BC)          ;LF     0AH
        INC     H               ;$      024H


@L1:
;Open "CP/M" file on an IEEE-488 drive
;
        LD      C,06H           ;C = 6 chars in string
        LD      HL,@L7          ;HL = address of "0:CP/M" string

        LD      A,(@L0)         ;Get current CP/M drive number from @L0
        RRA                     ;Rotate bit 0 (CBM drive number) into carry
                                ;If CBM drive number 0:
        JP      NC,0F05DH       ;  BIOS Open a file on an IEEE-488 device
                                ;If CBM drive number 1:
        LD      HL,@L8          ;  HL = address of "1:CP/M" string
        JP      0F05DH          ;  BIOS Open a file on an IEEE-488 device

@L3:
;Open "K" file on an IEEE-488 drive
;
        LD      C,03H           ;C = 3 chars in string
        LD      HL,@L9          ;HL = address of "0:K" string
        LD      A,(@L0)         ;Get current CP/M drive number from @L0
        RRA                     ;Rotate bit 0 (CBM drive number) into carry
                                ;If CBM drive number 0:
        JP      NC,0F05DH       ;  BIOS Open a file on an IEEE-488 device
                                ;If CBM drive number 1:
        LD      HL,@L10         ;  HL = address of "1:K" string
        JP      0F05DH          ;  BIOS Open a file on an IEEE-488 device

SAVESY:
;Read the CP/M system image from an IEEE-488 drive.
;
        LD      A,(HL)
        LD      (@L0),A
        CALL    0F054H          ;D = BIOS Get device address for a CP/M drive number
        PUSH    DE
        LD      E,0FH
        LD      HL,@L11
        LD      A,(@L0)         ;Get current CP/M drive number from @L0
        RRA
        JR      NC,BUFFIN+0177H
        LD      HL,@L12
        LD      C,04H
        CALL    0F05DH          ;BIOS Open a file on an IEEE-488 device
        LD      A,(@L0)         ;Get current CP/M drive number from @L0
        CALL    0F05AH          ;BIOS Read the error channel of an IEEE-488 device
        LD      (@L2),A         ;Store CBM DOS error code in @L2
        POP     DE
        CP      01H
        RET     NZ
        LD      E,01H
        PUSH    DE
        CALL    @L3             ;Open "K" file
        LD      A,(@L0)         ;Get current CP/M drive number from @L0
        CALL    0F05AH          ;BIOS Read the error channel of an IEEE-488 device
        LD      (@L2),A         ;Store CBM DOS error code in @L2
        POP     DE
        OR      A
        RET     NZ
        PUSH    DE
        CALL    0F033H          ;BIOS Send LISTEN to an IEEE-488 device
        LD      HL,06000H
        LD      BC,0800H
        LD      A,(HL)
        CALL    0F042H          ;BIOS Send byte to an IEEE-488 device
        INC     HL
        DEC     BC
        LD      A,B
        OR      C
        JR      NZ,BUFFIN+01A5H
        CALL    0F036H          ;BIOS Send UNLISTEN to all IEEE-488 devices
        POP     DE
        PUSH    DE
        CALL    0F060H          ;BIOS Close an open file on an IEEE-488 device
        POP     DE
        PUSH    DE
        CALL    @L1             ;Open "CP/M" file
        LD      A,(@L0)         ;Get current CP/M drive number from @L0
        CALL    0F05AH          ;BIOS Read the error channel of an IEEE-488 device
        LD      (@L2),A         ;Store CBM DOS error code in @L2
        POP     DE
        OR      A
        RET     NZ
        PUSH    DE
        CALL    0F033H          ;BIOS Send LISTEN to an IEEE-488 device
        LD      HL,04000H
        LD      BC,01C00H
        LD      A,(HL)
        CALL    0F042H          ;BIOS Send byte to an IEEE-488 device
        INC     HL
        DEC     BC
        LD      A,B
        OR      C
        JR      NZ,BUFFIN+01D2H
        CALL    0F036H          ;BIOS Send UNLISTEN to all IEEE-488 devices
        POP     DE
        CALL    0F060H          ;BIOS Close an open file on an IEEE-488 device
        LD      A,(@L0)         ;Get current CP/M drive number from @L0
        CALL    0F05AH          ;BIOS Read the error channel of an IEEE-488 device
        LD      (@L2),A         ;Store CBM DOS error code in @L2
        RET

FORMAT:
;Format an IEEE-488 drive for SoftBox use.
;
        LD      A,(HL)
        LD      (@L0),A
        CALL    0F054H          ;D = BIOS Get device address for a CP/M drive num

                                ;Set CBM drive number in format command:
        LD      A,(@L0)         ;  Get current CP/M drive number from @L0
        AND     01H             ;  Mask off all except bit 1 (CBM drive num)
        ADD     A,030H          ;  Convert it to ASCII
        LD      (@L13),A        ;  Save it into format command ("N0:CP/M...")

                                ;Send format command:
                                ;  D contains IEEE-488 primary address
        LD      E,0FH           ;  E = file number (15 = command channel)
        LD      C,014H          ;  C = 20 characters in string
        LD      HL,@L14         ;  HL = address of "N0:CP/M V2.2 DISK,XX"
        CALL    0F05DH          ;  BIOS Open a file on an IEEE-488 device

                                ;Check result of format command:
        LD      A,(@L0)         ;  Get current CP/M drive number from @L0
        CALL    0F05AH          ;  BIOS Read the error channel of an IEEE-488 device
        LD      (@L2),A         ;  Store CBM DOS error code in @L2
        OR      A               ;  Set flags to check error (0=OK)
        RET     NZ              ;  Return if not OK

                                ;Initialize the drive:
        LD      A,(@L0)         ;  Get current CP/M drive number from @L0
        CALL    0F078H          ;  BIOS Initialize an IEEE-488 disk drive

        LD      HL,04000H
        LD      DE,04001H
        LD      BC,0FFH
        LD      (HL),0E5H
        LDIR                    ;Copy BC bytes from (HL) to (DE)

        LD      A,07H
        LD      (@L15),A
        LD      A,01H
        LD      (@L16),A
@L18:
        CALL    @L17
        LD      A,(@L0)         ;Get current CP/M drive number from @L0
        CALL    0F05AH          ;BIOS Read the error channel of an IEEE-488 device
                                ;  Returns CBM DOS error code in A (0=OK)
        LD      (@L2),A         ;Store CBM DOS error code in @L2
        OR      A               ;Set flags
        RET     NZ              ;Return if an error occurred

        LD      HL,@L15
        DEC     (HL)
        JP      P,@L18
        RET
@L17:
        LD      HL,@L19
        LD      C,06H
        LD      A,(@L0)         ;Get current CP/M drive number from @L0
        CALL    0F057H          ;BIOS Open the command channel on IEEE-488 device
        CALL    0F04BH          ;BIOS Send string to the current IEEE-488 device
        LD      A,(04000H)
        CALL    0F045H          ;BIOS Send byte to IEEE-488 device with EOI asserted
        CALL    0F036H          ;BIOS Send UNLISTEN to all IEEE-488 devices
        LD      HL,@L20
        LD      C,07H
        LD      A,(@L0)         ;Get current CP/M drive number from @L0
        CALL    0F057H          ;BIOS Open the command channel on IEEE-488 device
        CALL    0F04BH          ;BIOS Send string to the current IEEE-488 device
        CALL    0F048H          ;BIOS Send carriage return to IEEE-488 dev with EOI
        CALL    0F036H          ;BIOS Send UNLISTEN to all IEEE-488 devices
        LD      A,(@L0)         ;Get current CP/M drive number from @L0
        CALL    0F054H          ;D = BIOS Get device address for a CP/M drive number
        LD      E,02H           ;E = secondary address 2
        CALL    0F033H          ;BIOS Send LISTEN to an IEEE-488 device
        LD      HL,04001H
        LD      C,0FFH
        CALL    0F04BH          ;BIOS Send string to the current IEEE-488 device
        CALL    0F036H          ;BIOS Send UNLISTEN to all IEEE-488 devices
        LD      A,(@L0)         ;Get current CP/M drive number from @L0
        CALL    0F057H          ;BIOS Open the command channel on IEEE-488 device
        LD      HL,@L21
        LD      C,05H
        CALL    0F04BH          ;BIOS Send string to the current IEEE-488 device
        LD      A,(@L0)         ;Get current CP/M drive number from @L0
        AND     01H
        ADD     A,030H
        CALL    0F042H          ;BIOS Send byte to an IEEE-488 device
        LD      A,(@L16)
        CALL    0F04EH          ;BIOS Send number as decimal string to IEEE dev
        LD      A,(@L15)
        CALL    0F04EH          ;BIOS Send number as decimal string to IEEE-488 dev
        CALL    0F048H          ;BIOS Send carriage return to IEEE-488 dev with EOI
        JP      0F036H          ;BIOS Send UNLISTEN to all IEEE-488 devices

CFORM:
;Format a Corvus drive for Softbox use.
;
        LD      C,(HL)
        CALL    0F01BH          ;BIOS Select disk drive
        LD      HL,080H
        LD      (HL),0E5H
        INC     L
        JR      NZ,BUFFIN+02B8H
        LD      BC,02H
        CALL    0F01EH          ;BIOS Set track number
        LD      BC,00H
        PUSH    BC
        CALL    0F021H          ;BIOS Set sector number
        CALL    0F02AH          ;BIOS Write selected sector
        POP     BC
        OR      A
        JP      NZ,@L4
        INC     BC
        LD      A,C
        CP      040H
        JR      NZ,BUFFIN+02C6H
        RET
@L4:
        LD      DE,@L22         ;DE = address of "Hit any key to"
        LD      C,09H           ;C = Output String
        CALL    05H             ;BDOS System Call

        LD      C,01H           ;C = Console Input
        JP      05H             ;BDOS System Call

@L22:
        DB 0DH,0AH,'Hit any key to abort : $'

@L21:
        LD      D,L             ;U      055H
        LD      (03220H),A
        JR      NZ,BUFFIN+0354H ;N

@L13:
        JR      NC,BUFFIN+0342H ;0:
        LD      B,E             ;C      043H
        LD      D,B             ;P      050H
        CPL                     ;/      02FH
        LD      C,L             ;M      04DH
        JR      NZ,BUFFIN+0364H
        LD      (0322EH),A
        JR      NZ,BUFFIN+0357H
        LD      C,C             ;I      049H
        LD      D,E             ;S      053H
        LD      C,E             ;K      04BH
        INC     L               ;,      02CH
        LD      E,B             ;X      058H
        LD      E,B             ;X      058H
@L20:
        LD      B,D             ;B      042H
        DEC     L               ;-      02DH
        LD      D,B             ;P      050H
        JR      NZ,BUFFIN+0350H
        JR      NZ,BUFFIN+0351H
@L19:
;"M-W"
        LD      C,L             ;M      04DH
        DEC     L               ;-      02DH
        LD      D,A             ;W      057H
        NOP                     ;NUL    00H
        INC     DE              ;013H   013H
        LD      BC,03223H
@L16:
        ORG     0329H
@L15:
        ORG     032AH

@L11:
        DB 'S0:*'
        DB 'S1:*'
        DB '0:CP/M'
@L8:
        DB '1:CP/M'

@L9:
        DB '0:K'

@L10:
        DB '1:K'

@L0:
;Current CP/M drive number
        ORG     0345H

@L2:
;Last CBM DOS error code
        ORG     0346H

@L14    EQU     BUFFIN+0305H
@L12    EQU     BUFFIN+032EH
@L7     EQU     BUFFIN+0332H
;
        END
